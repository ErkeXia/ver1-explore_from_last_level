functools.partial(<function gpt at 0x75d26e4a2290>, model='gpt-4', temperature=0.7)
x = 4 5 6 10

Start reasoning with step 0

number of prev level1
Getting proposals from index 0 with y = 
Current number is: 4 5 6 10

The proposals for  is 
 ['4 + 5 = 9 (left: 6 9 10)', '4 * 5 = 20 (left: 6 10 20)', '5 + 4 = 9 (left: 6 9 10)', '4 - 5 = -1 (left: 6 10 -1)', '5 - 4 = 1 (left: 6 10 1)', '10 - 4 = 6 (left: 5 6 10)', '10 / 4 = 2.5 (left: 5 6 2.5)', '10 + 4 = 14 (left: 5 6 14)']
getting value for 4 + 5 = 9 (left: 6 9 10)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n6 + 9 + 10 = 25\n(10 - 9) * 9 = 1 * 9 = 9\n(10 - 6) * 9 = 4 * 9 = 36\n(9 - 6) * 10 = 3 * 10 = 30\nimpossible', '\n6 + 9 + 10 = 25\n10 + 9 + 6 = 25\n9 + 10 + 6 = 25\n(10 - 6) * 9 = 4 * 9 = 36\n(6 - 10) * 9 = -4 * 9 = -36\n(9 - 10) * 6 = -1 * 6 = -6\n(9 - 6) * 10 = 3 * 10 = 30\n(6 - 9) * 10 = -3 * 10 = -30\n(10 - 9) * 6 = 1 * 6 = 6\n(10 - 6) * 9 = 4 * 9 = 36\n(6 - 9) * 10 = -4 * 10 = -40\n10 - 6 - 9 = -5\n6 - 9 - 10 = -13\n9 - 10 - 6 = -7\n(9 + 6) - 10 = 15 - 10 = 5\n(10 + 6) - 9 = 16 - 9 = 7\n(9 + 10) - 6 = 19 - 6 = 13\n(6 + 10) - 9 = 16 - 9 = 7\n(9 + 6) - 10 = 15 - 10 = 5\n(10 + 9) - 6 = 19 - 6 = 13\n(6 + 9) - 10 = 15 - 10 = 5\n(6 + 10) - 9 = 16 - 9 = 7\n(10 + 6) - 9 = 16 - 9 = 7\n10 + (6 - 9) = 10 - 3 = 7\n6 + (9 - 10) = 6 - 1 = 5\n9 + (10 - 6) = 9 + 4 = 13\n(9 - 6) + 10 = 3 + 10 = 13\n(10 - 6) + 9 = 4 + 9 = 13\n(6 - 9) + 10 = -3 + 10 = 7\n(9 - 10) + 6 = -1 + 6 = 5\n(6 - 10) + 9 = -4 + 9 = 5\n(9 - 6) + 10 = 3 + 10 = 13\n(6 - 9) + 10 = -3 + 10 = 7\n10 + (9 - 6) = 10 + 3 = 13\n6 + (10 - 9) = 6 + 1 = 7\n9 + (6 - 10) = 9 - 4 = 5\n(10 - 9) + 6 = 1 + 6 = 7\n(6 - 9) + 10 = -3 + 10 = 7\n10 + (6 - 9) = 10 - 3 = 7\n6 + (9 - 10) = 6 - 1 = 5\n9 + (10 - 6) = 9 + 4 = 13\n(9 - 6) + 10 = 3 + 10 = 13\n(10 - 6) + 9 = 4 + 9 = 13\n(6 - 9) + 10 = -3 + 10 = 7\n(9 - 10) + 6 = -1 + 6 = 5\n(6 - 10) + 9 = -4 + 9 = 5\n(9 - 6) + 10 = 3 + 10 = 13\n(6 - 9) + 10 = -3 + 10 = 7\n10 + (9 - 6) = 10 + 3 = 13\n6 + (10 - 9) = 6 + 1 = 7\n9 + (6 - 10) = 9 - 4 = 5\n(10 - 9) + 6 = 1 + 6 = 7\n(6 - 9) + 10 = -3 + 10 = 7\nimpossible', '\n6 * 9 = 54\n54 / 10 = 5.4\n(10 - 9) * 6 = 1 * 6 = 6\n(9 - 6) * 10 = 3 * 10 = 30\n(9 - 6) * (10 - 6) = 3 * 4 = 12\nI cannot obtain 24 now, but numbers are within a reasonable range\nlikely']
The value is 1.002
getting value for 4 * 5 = 20 (left: 6 10 20)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n6 + 10 + 20 = 36\n(20 - 6) * 10 = 14 * 10 = 140\n(10 - 6) * 20 = 4 * 20 = 80\n(20 - 10) * 6 = 10 * 6 = 60\n(20 - 6) * 10 = 14 * 10 = 140\n(20 - 6) * 10 = 14 * 10 = 140\n6 * (20 - 10) = 6 * 10 = 60\n10 * (20 - 6) = 10 * 14 = 140\n(10 - 6) * (20 - 6) = 4 * 14 = 56\n(20 - 10) * (10 - 6) = 10 * 4 = 40\nimpossible', '\n6 + 10 + 20 = 36\n(10 + 20) * 6 = 30 * 6 = 180\n(20 - 6) * 10 = 14 * 10 = 140\n(6 - 20) * 10 = -14 * 10 = -140\n20 / (6 / 10) = 20 / 0.6 = 33.33\nI cannot obtain 24 now, but numbers are within a reasonable range\nlikely', '\n6 + 10 + 20 = 36\n(6 + 10) * 20 = 160\n(20 - 10) * 6 = 60\n(20 - 6) * 10 = 140\n(10 - 6) * 20 = 80\n(6 + 20) * 10 = 260\n(10 - 20) * 6 = -80\nimpossible']
The value is 1.002
getting value for 5 + 4 = 9 (left: 6 9 10)

getting value for 4 - 5 = -1 (left: 6 10 -1)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n6 + 10 + (-1) = 15 + (-1) = 14\n6 * (-1) = -6\n10 - (-1) = 11\n(-1) * 6 = -6\n(-1) * 10 = -10\n10 / (-1) = -10\n6 10 -1 are all within a reasonable range\nlikely', '\n6 + 10 + (-1) = 15 + (-1) = 14\n6 * (-1) = -6\n6 / (-1) = -6\n10 + (-1) = 9\n10 * (-1) = -10\n10 / (-1) = -10\nimpossible', '\n6 + 10 = 16\n10 + (-1) = 9\n6 + 10 + (-1) = 15\n16 + (-1) = 15\n6 + (10 - 1) = 6 + 9 = 15\nimpossible']
The value is 1.002
getting value for 5 - 4 = 1 (left: 6 10 1)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n6 + 10 + 1 = 17\n(10 - 6) * 1 = 4\n1 * 10 - 6 = 4\n(6 - 1) * 10 = 50\n(1 + 6) * 10 = 70\nI cannot obtain 24 now, but numbers are within a reasonable range\nlikely', '\n6 + 10 + 1 = 17\n(10 - 6) * 1 = 4 * 1 = 4\n(6 - 1) * 10 = 5 * 10 = 50\n(1 - 6) * 10 = -5 * 10 = -50\nimpossible', '\n6 * 10 = 60\n10 + 1 = 11\n6 10 1 are all too big\nimpossible']
The value is 1.002
getting value for 10 - 4 = 6 (left: 5 6 10)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n5 + 6 + 10 = 21\n(6 + 10) * 5 = 80\n(10 - 6) * 5 = 10 * 5 = 50\n(10 + 5) * 6 = 60 + 6 = 66\n(10 - 5) * 6 = 5 * 6 = 30\n(5 + 6) * 10 = 11 * 10 = 110\n10 * 5 + 6 = 56\n10 * 6 + 5 = 65\n10 + 5 + 6 = 21\n5 + 10 + 6 = 21\n6 + 5 + 10 = 21\nimpossible', '\n5 + 6 + 10 = 21\n(10 - 6) * 5 = 4 * 5 = 20\n(10 - 6) * (5 + 6) = 4 * 11 = 44\n(10 - 5) * (6 + 5) = 5 * 11 = 55\n(6 - 5) * (5 + 10) = 1 * 15 = 15\n(5 + 10) * (6 - 5) = 15 * 1 = 15\n(5 + 10) * (5 + 6) = 15 * 11 = 165\nimpossible', '\n5 + 6 = 11\n(6 - 5) * 10 = 10\n(10 - 6) + 6 = 10\n10 + 6 + 6 = 22\n(6 - 6) + 10 + 6 = 10\n(10 - 6) + (6 - 6) + 6 = 10\n10 * (6 - 6) + 6 = 6\nimpossible']
The value is 0.003
getting value for 10 / 4 = 2.5 (left: 5 6 2.5)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n5 + 6 + 2.5 = 13.5\n(6 - 5) * 2.5 = 2.5 * 2.5 = 6.25\n(2.5 * 2.5) * 5 = 6.25 * 5 = 31.25\nI cannot obtain 24 now, but numbers are within a reasonable range\nlikely', '\n5 + 6 + 2.5 = 13.5\n(6 - 5) * 2.5 = 2.5 * 2.5 = 6.25\n(2.5 * 2.5) + 5 + 6 = 6.25 + 5 + 6 = 17.25\n(5 + 6) * 2.5 = 11 * 2.5 = 27.5\n(2.5 * 6) + 5 = 15 + 5 = 20\nI cannot obtain 24 now, but numbers are within a reasonable range\nlikely', '\n5 + 6 = 11\n11 + 2.5 = 13.5\n6 * 2.5 = 15\n5 + 2.5 = 7.5\n6 - 2.5 = 3.5\n5 * 2.5 = 12.5\n6 / 2.5 = 2.4\n5 / 2.5 = 2\nI cannot obtain 24 now, but numbers are within a reasonable range\nlikely']
The value is 3.0
getting value for 10 + 4 = 14 (left: 5 6 14)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n5 + 6 + 14 = 25\n(14 - 5) * 6 = 9 * 6 = 54\n(6 - 5) * 14 = 1 * 14 = 14\nI cannot obtain 24 now, but numbers are within a reasonable range\nlikely', '\n5 + 6 = 11\n11 + 14 = 25\n(6 - 5) * 14 = 1 * 14 = 14\n5 * 14 = 70\n5 + (14 - 6) = 5 + 8 = 13\n5 6 14 are all too small\nimpossible', '\n5 + 6 + 14 = 25\n(14 - 6) * 5 = 8 * 5 = 40\n(14 - 6) * 5 = 8 * 5 = 40\n(6 - 5) * 14 = 1 * 14 = 14\n5 6 14 are all too big\nimpossible']
The value is 1.002
-- new step of 0

-- new_ys --: [('4 + 5 = 9 (left: 6 9 10)\n', 0, '4 + 5 = 9 (left: 6 9 10)'), ('4 * 5 = 20 (left: 6 10 20)\n', 0, '4 * 5 = 20 (left: 6 10 20)'), ('5 + 4 = 9 (left: 6 9 10)\n', 0, '5 + 4 = 9 (left: 6 9 10)'), ('4 - 5 = -1 (left: 6 10 -1)\n', 0, '4 - 5 = -1 (left: 6 10 -1)'), ('5 - 4 = 1 (left: 6 10 1)\n', 0, '5 - 4 = 1 (left: 6 10 1)'), ('10 - 4 = 6 (left: 5 6 10)\n', 0, '10 - 4 = 6 (left: 5 6 10)'), ('10 / 4 = 2.5 (left: 5 6 2.5)\n', 0, '10 / 4 = 2.5 (left: 5 6 2.5)'), ('10 + 4 = 14 (left: 5 6 14)\n', 0, '10 + 4 = 14 (left: 5 6 14)')]
-- values -- [1.002, 1.002, 1.002, 1.002, 1.002, 0.003, 3.0, 1.002]
-- sorted_new_ys --: (('10 / 4 = 2.5 (left: 5 6 2.5)\n', 0, '10 / 4 = 2.5 (left: 5 6 2.5)'), ('4 + 5 = 9 (left: 6 9 10)\n', 0, '4 + 5 = 9 (left: 6 9 10)'), ('4 * 5 = 20 (left: 6 10 20)\n', 0, '4 * 5 = 20 (left: 6 10 20)'), ('5 + 4 = 9 (left: 6 9 10)\n', 0, '5 + 4 = 9 (left: 6 9 10)'), ('4 - 5 = -1 (left: 6 10 -1)\n', 0, '4 - 5 = -1 (left: 6 10 -1)'), ('5 - 4 = 1 (left: 6 10 1)\n', 0, '5 - 4 = 1 (left: 6 10 1)'), ('10 + 4 = 14 (left: 5 6 14)\n', 0, '10 + 4 = 14 (left: 5 6 14)'), ('10 - 4 = 6 (left: 5 6 10)\n', 0, '10 - 4 = 6 (left: 5 6 10)'))
-- sol values --: (3.0, 1.002, 1.002, 1.002, 1.002, 1.002, 1.002, 0.003)
-- choices --: [('10 / 4 = 2.5 (left: 5 6 2.5)\n', 0, '10 / 4 = 2.5 (left: 5 6 2.5)'), ('4 + 5 = 9 (left: 6 9 10)\n', 0, '4 + 5 = 9 (left: 6 9 10)'), ('4 * 5 = 20 (left: 6 10 20)\n', 0, '4 * 5 = 20 (left: 6 10 20)'), ('5 + 4 = 9 (left: 6 9 10)\n', 0, '5 + 4 = 9 (left: 6 9 10)'), ('4 - 5 = -1 (left: 6 10 -1)\n', 0, '4 - 5 = -1 (left: 6 10 -1)')]

Start reasoning with step 1

number of prev level5
Getting proposals from index 0 with y = 10 / 4 = 2.5 (left: 5 6 2.5)

Current number is: 5 6 2.5

The proposals for 10 / 4 = 2.5 (left: 5 6 2.5)
 is 
 ['5 + 6 = 11 (left: 11 2.5)', '5 * 6 = 30 (left: 30 2.5)', '6 + 5 = 11 (left: 11 2.5)', '5 / 6 = 0.83 (left: 0.83 2.5)', '6 / 5 = 1.2 (left: 1.2 2.5)', '2.5 + 5 = 7.5 (left: 7.5 6)', '2.5 + 6 = 8.5 (left: 8.5 5)', '5 + 2.5 = 7.5 (left: 7.5 6)']
Getting proposals from index 1 with y = 4 + 5 = 9 (left: 6 9 10)

Current number is: 6 9 10

The proposals for 4 + 5 = 9 (left: 6 9 10)
 is 
 ['6 + 9 = 15 (left: 15 10)', '6 * 9 = 54 (left: 54 10)', '9 + 6 = 15 (left: 10 15)', '10 - 6 = 4 (left: 4 9)', '9 - 6 = 3 (left: 3 10)', '6 + 10 = 16 (left: 16 9)', '6 - 9 = -3 (left: -3 10)', '10 / 6 = 1.67 (left: 1.67 9)']
Getting proposals from index 2 with y = 4 * 5 = 20 (left: 6 10 20)

Current number is: 6 10 20

The proposals for 4 * 5 = 20 (left: 6 10 20)
 is 
 ['1. 6 + 10 = 16 (left: 16 20)', '2. 10 + 6 = 16 (left: 16 20)', '3. 20 - 6 = 14 (left: 14 10)', '4. 10 - 6 = 4 (left: 4 20)', '5. 20 / 6 = 3.33 (left: 3.33 10)', '6. 10 / 6 = 1.67 (left: 1.67 20)', '7. 6 * 10 = 60 (left: 60 20)', '8. 20 - 10 = 10 (left: 6 10)']
Getting proposals from index 3 with y = 5 + 4 = 9 (left: 6 9 10)

Current number is: 6 9 10

The proposals for 5 + 4 = 9 (left: 6 9 10)
 is 
 ['6 + 9 = 15 (left: 15 10)', '6 * 9 = 54 (left: 54 10)', '9 - 6 = 3 (left: 3 10)', '10 + 6 = 16 (left: 16 9)', '9 / 6 = 1.5 (left: 1.5 10)', '10 - 9 = 1 (left: 1 6)', '6 + 10 = 16 (left: 16 9)', '9 + 6 = 15 (left: 15 10)']
Getting proposals from index 4 with y = 4 - 5 = -1 (left: 6 10 -1)

Current number is: 6 10 -1

The proposals for 4 - 5 = -1 (left: 6 10 -1)
 is 
 ['6 + 10 = 16 (left: 16 -1)', '10 - 6 = 4 (left: 4 -1)', '-1 + 6 = 5 (left: 5 10)', '-1 + 10 = 9 (left: 6 9)', '10 + (-1) = 9 (left: 6 9)', '6 - 10 = -4 (left: -4 -1)', '-1 - 6 = -7 (left: 10 -7)', '6 * 10 = 60 (left: 60 -1)']
getting value for 10 / 4 = 2.5 (left: 5 6 2.5)
5 + 6 = 11 (left: 11 2.5)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n11 * 2.5 = 27.5\n11 + 2.5 = 13.5\n11 - 2.5 = 8.5\n2.5 / 11 = 0.23\nimpossible', '\n11 + 2.5 = 13.5\n(11 - 2.5) * 2.5 = 8.5 * 2.5 = 21.25\nimpossible', '\n11 + 2.5 = 13.5\n11 * 2.5 = 27.5\nimpossible']
The value is 0.003
getting value for 10 / 4 = 2.5 (left: 5 6 2.5)
5 * 6 = 30 (left: 30 2.5)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n30 + 2.5 = 32.5\n30 - 2.5 = 27.5\n30 * 2.5 = 75\n30 / 2.5 = 12\n30 2.5 are not within a reasonable range\nimpossible', '\n30 + 2.5 = 32.5\n(2.5 * 30) / 2.5 = 30\n30 2.5 are all too big\nimpossible', '\n30 2.5 = 30 + 2.5 = 32.5\n(2.5 * 12) = 30\n(2.5 * 9.6) = 24\n30 - (30 - 2.5) = 2.5\nI cannot obtain 24 now, but numbers are within a reasonable range\nlikely']
The value is 1.002
getting value for 10 / 4 = 2.5 (left: 5 6 2.5)
6 + 5 = 11 (left: 11 2.5)

getting value for 10 / 4 = 2.5 (left: 5 6 2.5)
5 / 6 = 0.83 (left: 0.83 2.5)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n0.83 + 2.5 = 3.33\n(2.5 - 0.83) * 0.83 = 1.67 * 0.83 = 1.38\n(2.5 - 0.83) * 0.83 = 1.67 * 0.83 = 1.38\n(2.5 - 0.83) * 0.83 = 1.67 * 0.83 = 1.38\nI cannot obtain 24 now, but numbers are within a reasonable range\nlikely', '\n0.83 + 2.5 = 3.33\n(2.5 - 0.83) * 2.5 = 1.67 * 2.5 = 4.17\n(2.5 - 0.83) * (0.83 + 2.5) = 1.67 * 3.33 = 5.56\n(0.83 * 2.5) + 2.5 = 2.08 + 2.5 = 4.58\n2.5 / (0.83 / 2.5) = 2.5 / 0.332 = 7.52\n2.5 / (0.83 + 2.5) = 2.5 / 3.33 = 0.75\n0.83 * 2.5 = 2.08\n2.5 - 0.83 = 1.67\n2.5 + 0.83 = 3.33\n0.83 + 2.5 = 3.33\n0.83 - 2.5 = -1.67\n0.83 / 2.5 = 0.332\n0.83 * 2.5 = 2.08\n0.83 + 2.5 = 3.33\n0.83 - 2.5 = -1.67\n0.83 / 2.5 = 0.332\nimpossible', '\n0.83 + 2.5 = 3.33\n(2.5 - 0.83) * 0.83 = 1.67 * 0.83 = 1.3851\n(2.5 - 0.83) / (0.83 - 2.5) = -1.67 / -2.67 = 0.625\n(2.5 + 0.83) * 0.83 = 3.33 * 0.83 = 2.7669\nI cannot obtain 24 now, but numbers are within a reasonable range\nlikely']
The value is 2.001
getting value for 10 / 4 = 2.5 (left: 5 6 2.5)
6 / 5 = 1.2 (left: 1.2 2.5)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n1.2 * 2.5 = 3\n2.5 + 1.2 = 3.7\n1.2 / 2.5 = 0.48\n1.2 + 2.5 = 3.7\n2.5 - 1.2 = 1.3\nimpossible', '\n1.2 + 2.5 = 3.7\n2.5 - 1.2 = 1.3\n1.2 * 2.5 = 3\n1.2 / 2.5 = 0.48\nI cannot obtain 24 now, but numbers are within a reasonable range\nlikely', '\n1.2 + 2.5 = 3.7\n2.5 - 1.2 = 1.3\n1.2 * 2.5 = 3\n1.2 / 2.5 = 0.48\nI cannot obtain 24 now, but numbers are within a reasonable range\nlikely']
The value is 2.001
getting value for 10 / 4 = 2.5 (left: 5 6 2.5)
2.5 + 5 = 7.5 (left: 7.5 6)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n7.5 + 6 = 13.5\n(6 - 7.5) * 6 = -1.5 * 6 = -9\n(7.5 - 6) * 6 = 1.5 * 6 = 9\nI cannot obtain 24 now, but numbers are within a reasonable range\nlikely', '\n7.5 + 6 = 13.5\n(7.5 * 6) / 6 = 7.5\n7.5 6 are all too small\nimpossible', '\n7.5 + 6 = 13.5\n6 - 7.5 = -1.5\n7.5 * 6 = 45\n7.5 / 6 = 1.25\nI cannot obtain 24 now, but numbers are within a reasonable range\nlikely']
The value is 2.001
getting value for 10 / 4 = 2.5 (left: 5 6 2.5)
2.5 + 6 = 8.5 (left: 8.5 5)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n8.5 * 5 = 42.5\n(5 - 8.5) * 5 = -3.5 * 5 = -17.5\nI cannot obtain 24 now, but numbers are within a reasonable range\nlikely', '\n8.5 + 5 = 13.5\n5 * 8.5 = 42.5\n(8.5 - 5) * 5 = 3.5 * 5 = 17.5\n(5 - 8.5) * 8.5 = -3.5 * 8.5 = -29.75\n8.5 / 5 = 1.7\nI cannot obtain 24 now, but numbers are within a reasonable range\nlikely', '\n8.5 + 5 = 13.5\n8.5 - 5 = 3.5\n5 * 8.5 = 42.5\n8.5 / 5 = 1.7\n(8.5 + 5) * 5 = 13.5 * 5 = 67.5\nI cannot obtain 24 now, but numbers are within a reasonable range\nlikely']
The value is 3.0
getting value for 10 / 4 = 2.5 (left: 5 6 2.5)
5 + 2.5 = 7.5 (left: 7.5 6)

getting value for 4 + 5 = 9 (left: 6 9 10)
6 + 9 = 15 (left: 15 10)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n15 + 10 = 25\nimpossible', '\n15 10 = 25\n10 15 = 25\n15 + 10 = 25\nimpossible', '\n15 + 10 = 25\n15 - 10 = 5\n10 / 15 = 0.67\nimpossible']
The value is 0.003
getting value for 4 + 5 = 9 (left: 6 9 10)
6 * 9 = 54 (left: 54 10)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n54 + 10 = 64\n(10 - 54) / 1 = -44 / 1 = -44\n(54 - 10) * 10 = 44 * 10 = 440\n(54 / 10) * 10 = 5 * 10 = 50\n(54 * 10) / 10 = 540 / 10 = 54\n(10 - 54) * 10 = -44 * 10 = -440\n54 / (10 / 54) = 54 / 0.185 = 291.89\nimpossible', '\n54 + 10 = 64\n64 - 40 = 24\nsure', '\n54 10 = 64\n(54 - 10) * 10 = 44 * 10 = 440\n(10 - 54) * 10 = -44 * 10 = -440\n(54 + 10) / 10 = 64 / 10 = 6.4\n54 10 = 64\n(54 + 10) - 10 = 64 - 10 = 54\n54 10 = 64\n54 / (10 + 1) = 54 / 11 = 4.91\n(54 - 10) * 10 = 44 * 10 = 440\nimpossible']
The value is 20.002
getting value for 4 + 5 = 9 (left: 6 9 10)
9 + 6 = 15 (left: 10 15)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n10 + 15 = 25\n10 * 15 = 150\n(15 - 10) * 10 = 50\n(10 + 15) - (10 + 10) = 15 - 20\nI cannot obtain 24 now, but numbers are within a reasonable range\nlikely', '\n10 + 15 = 25\nimpossible', '\n10 + 15 = 25\n15 - 10 = 5\n10 * 15 = 150\n10 / 15 = 0.67\nimpossible']
The value is 1.002
getting value for 4 + 5 = 9 (left: 6 9 10)
10 - 6 = 4 (left: 4 9)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n4 + 9 = 13\nimpossible', '\n4 + 9 = 13\n4 * 9 = 36\n9 - 4 = 5\nimpossible', '\n4 + 9 = 13\n9 - 4 = 5\n4 * 9 = 36\n4 / 9 = 0.44\nimpossible']
The value is 0.003
getting value for 4 + 5 = 9 (left: 6 9 10)
9 - 6 = 3 (left: 3 10)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n3 + 10 = 13\n10 - 3 = 7\n3 * 10 = 30\nimpossible', '\n3 * 10 = 30\n3 + 10 = 13\n10 - 3 = 7\nimpossible', '\n3 + 10 = 13\n10 - 3 = 7\n3 * 10 = 30\n3 / 10 = 0.3\nimpossible']
The value is 0.003
getting value for 4 + 5 = 9 (left: 6 9 10)
6 + 10 = 16 (left: 16 9)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n16 9 = 25\n9 16 = 25\nI cannot obtain 24 now, but numbers are within a reasonable range\nlikely', '\n16 + 9 = 25\n9 - 16 = -7\n16 * 9 = 144\n16 / 9 = 1.78\nimpossible', '\n16 + 9 = 25\nimpossible']
The value is 1.002
getting value for 4 + 5 = 9 (left: 6 9 10)
6 - 9 = -3 (left: -3 10)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n-3 + 10 = 7\n10 - (-3) = 13\n10 * -3 = -30\n-3 / 10 = -0.3\n-3 10 cannot be used to obtain 24\nimpossible', '\n-3 + 10 = 7\nimpossible', '\n-3 10 = -3 + 10 = 7\nimpossible']
The value is 0.003
getting value for 4 + 5 = 9 (left: 6 9 10)
10 / 6 = 1.67 (left: 1.67 9)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n1.67 * 9 = 15.03\n(9 - 1.67) * 1.67 = 7.33 * 1.67 = 12.27\nI cannot obtain 24 now, but numbers are within a reasonable range\nlikely', '\n1.67 * 9 = 15.03\n9 + 1.67 = 10.67\n1.67 + 9 = 10.67\nimpossible', '\n1.67 + 9 = 10.67\n(9 - 1.67) * 1.67 = 7.33 * 1.67 = 12.27\n(1.67 + 9) * 1.67 = 10.67 * 1.67 = 17.83\n(1.67 + 9) / 1.67 = 10.67 / 1.67 = 6.38\n(9 - 1.67) / 1.67 = 7.33 / 1.67 = 4.39\nimpossible']
The value is 1.002
getting value for 4 * 5 = 20 (left: 6 10 20)
1. 6 + 10 = 16 (left: 16 20)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n16 + 20 = 36\n20 - 16 = 4\n16 * 20 = 320\n16 / 20 = 0.8\nimpossible', '\n16 + 20 = 36\n(20 - 16) * 1 = 4\n(4 - 1) * 20 = 76\nI cannot obtain 24 now, but numbers are within a reasonable range\nlikely', '\n16 + 20 = 36\n(20 - 16) * 1 = 4\n16 * 1 + 20 = 36\n20 - 16 = 4\n16 20 are too big\nimpossible']
The value is 1.002
getting value for 4 * 5 = 20 (left: 6 10 20)
2. 10 + 6 = 16 (left: 16 20)

getting value for 4 * 5 = 20 (left: 6 10 20)
3. 20 - 6 = 14 (left: 14 10)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n14 + 10 = 24\nsure', '\n14 + 10 = 24\nsure', '\n14 + 10 = 24\nsure']
The value is 60.0
getting value for 4 * 5 = 20 (left: 6 10 20)
4. 10 - 6 = 4 (left: 4 20)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n4 + 20 = 24\nsure', '\n4 + 20 = 24\nsure', '\n4 + 20 = 24\nsure']
The value is 60.0
getting value for 4 * 5 = 20 (left: 6 10 20)
5. 20 / 6 = 3.33 (left: 3.33 10)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n3.33 * 10 = 33.3\n(10 - 3.33) * 3.33 = 6.67 * 3.33 = 22.21\n(10 / 3.33) + 3.33 = 3 + 3.33 = 6.33\n10 + 3.33 = 13.33\nI cannot obtain 24 now, but numbers are within a reasonable range\nlikely', '\n3.33 + 10 = 13.33\n10 - 3.33 = 6.67\n3.33 * 10 = 33.3\n3.33 / 10 = 0.333\n10 * 3.33 = 33.3\n3.33 + 10 = 13.33\n3.33 + (10 - 3.33) = 13.33\n(3.33 * 10) / 3.33 = 10\nimpossible', '\n3.33 + 10 = 13.33\n3.33 * 10 = 33.3\n10 - 3.33 = 6.67\n3.33 / 10 = 0.333\n3.33 * 10 = 33.3\n3.33 * 10 = 33.3\n3.33 + 10 = 13.33\n10 - 3.33 = 6.67\n(10 - 3.33) * 3.33 = 6.67 * 3.33 = 22.22\nimpossible']
The value is 1.002
getting value for 4 * 5 = 20 (left: 6 10 20)
6. 10 / 6 = 1.67 (left: 1.67 20)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n1.67 + 20 = 21.67\n(20 - 1.67) * 1.67 = 18.33 * 1.67 = 30.56\nI cannot obtain 24 now, but numbers are within a reasonable range\nlikely', '\n1.67 + 20 = 21.67\n(20 - 1.67) * 1.67 = 18.33 * 1.67 = 30.61\nI cannot obtain 24 now, but numbers are within a reasonable range\nlikely', '\n1.67 + 20 = 21.67\n(20 - 1.67) / 1.67 = 11.5 / 1.67 = 6.88\n(20 - 1.67) * 1.67 = 18.33\n(1.67 * 1.67) + 20 = 2.79 + 20 = 22.79\n(1.67 * 20) / 1.67 = 33.4 / 1.67 = 20\nI cannot obtain 24 now, but numbers are within a reasonable range\nlikely']
The value is 3.0
getting value for 4 * 5 = 20 (left: 6 10 20)
7. 6 * 10 = 60 (left: 60 20)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n60 20 = 80\n(80 - 60) = 20\n20 20 = 400\n(400 - 376) = 24\nsure', '\n60 + 20 = 80\n(60 - 20) + 20 = 40 + 20 = 60\n60 * 20 = 1200\n(20 / 60) * 60 = 1 * 60 = 60\nimpossible', '\n60 - 20 = 40\n40 20 = 20 * 2 = 40\n20 + 20 = 40\n40 + 20 = 60\n60 - 20 = 40\n40 + 20 = 60\n60 / 20 = 3\nimpossible']
The value is 20.002
getting value for 4 * 5 = 20 (left: 6 10 20)
8. 20 - 10 = 10 (left: 6 10)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n6 + 10 = 16\n(10 - 6) * 6 = 4 * 6 = 24\nsure', '\n6 10 = 16\n10 - 6 = 4\n(6 + 4) * 1 = 10 * 1 = 10\n(6 * 10) / 2 = 60 / 2 = 30\nimpossible', '\n6 + 10 = 16\n(10 - 6) * 6 = 4 * 6 = 24\nsure']
The value is 40.001
getting value for 5 + 4 = 9 (left: 6 9 10)
6 + 9 = 15 (left: 15 10)

getting value for 5 + 4 = 9 (left: 6 9 10)
6 * 9 = 54 (left: 54 10)

getting value for 5 + 4 = 9 (left: 6 9 10)
9 - 6 = 3 (left: 3 10)

getting value for 5 + 4 = 9 (left: 6 9 10)
10 + 6 = 16 (left: 16 9)

getting value for 5 + 4 = 9 (left: 6 9 10)
9 / 6 = 1.5 (left: 1.5 10)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n1.5 * 10 = 15\n10 / 1.5 = 6.67\n1.5 + 10 = 11.5\n10 - 1.5 = 8.5\nimpossible', '\n1.5 * 10 = 15\n10 - 1.5 = 8.5\n1.5 + 8.5 = 10\nimpossible', '\n1.5 * 10 = 15\n15 + 9 = 24\nsure']
The value is 20.002
getting value for 5 + 4 = 9 (left: 6 9 10)
10 - 9 = 1 (left: 1 6)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n1 + 6 = 7\nimpossible', '\n1 + 6 = 7\n1 6 are all too small\nimpossible', '\n1 + 6 = 7\nimpossible']
The value is 0.003
getting value for 5 + 4 = 9 (left: 6 9 10)
6 + 10 = 16 (left: 16 9)

getting value for 5 + 4 = 9 (left: 6 9 10)
9 + 6 = 15 (left: 15 10)

getting value for 4 - 5 = -1 (left: 6 10 -1)
6 + 10 = 16 (left: 16 -1)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n16 - (-1) = 17\n16 + 1 = 17\n16  -1  = 15\nimpossible', '\n16 - (-1) = 17\n16 + 1 = 17\n16  -1  = 15\n16 + (-1) = 15\n16 - (-1) = 17\n16 1 = 16 + 1 = 17\nimpossible', '\n16 - (-1) = 17\n16 + 1 = 17\n16 * (-1) = -16\n16 / (-1) = -16\nI cannot obtain 24 now, but numbers are within a reasonable range\nlikely']
The value is 1.002
getting value for 4 - 5 = -1 (left: 6 10 -1)
10 - 6 = 4 (left: 4 -1)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n4 - (-1) = 5\n4 + 1 = 5\nimpossible', '\n4 + (-1) = 3\nimpossible', '\n4 - (-1) = 5\n5 + 19 = 24\nsure']
The value is 20.002
getting value for 4 - 5 = -1 (left: 6 10 -1)
-1 + 6 = 5 (left: 5 10)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n5 + 10 = 15\n10 - 5 = 5\n5 * 10 = 50\nimpossible', '\n5 + 10 = 15\n10 - 5 = 5\n5 * 10 = 50\n5 / 10 = 0.5\nimpossible', '\n5 + 10 = 15\n5 * 10 = 50\n10 - 5 = 5\n5 / 10 = 0.5\nimpossible']
The value is 0.003
getting value for 4 - 5 = -1 (left: 6 10 -1)
-1 + 10 = 9 (left: 6 9)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n6 + 9 = 15\n(9 - 6) * 6 = 3 * 6 = 18\n6 * 9 = 54\n(9 - 6) + 6 + 6 = 9\n6 9 are too big\nimpossible', '\n6 + 9 = 15\n(9 - 6) * 6 = 3 * 6 = 18\nI cannot obtain 24 now, but numbers are within a reasonable range\nlikely', '\n6 + 9 = 15\n6 * 9 = 54\n9 - 6 = 3\n6 / 9 = 0.67\nimpossible']
The value is 1.002
getting value for 4 - 5 = -1 (left: 6 10 -1)
10 + (-1) = 9 (left: 6 9)

getting value for 4 - 5 = -1 (left: 6 10 -1)
6 - 10 = -4 (left: -4 -1)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n-4 + (-1) = -5\n(-1 + (-4)) = -5\n-4  -  (-1) = -5\n-4 * (-1) = 4\nimpossible', '\n-4 + (-1) = -5\n(-4 - (-1)) = -3\n(-4 * (-1)) = 4\n(-1 + (-4)) = -5\n-4  op  -1  =  -5        (remaining: 19)   # optional\n(-4 + (-1))  op  -3  =  -4        (remaining: 19)   # optional\nimpossible', '\n-4 + (-1) = -5\n-4 * (-1) = 4\n(-1 - (-4)) * (-1) = 3 * (-1) = -3\n(-1 * (-4)) - (-1) = 4 - (-1) = 5\n(-4 / (-1)) = 4\nimpossible']
The value is 0.003
getting value for 4 - 5 = -1 (left: 6 10 -1)
-1 - 6 = -7 (left: 10 -7)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n10 - 7 = 3\nimpossible', "\n10 - 7 = 3\n(7 - 10) is negative, so I'll ignore that\n(10 + 7) = 17\nimpossible", '\n10 - 7 = 3\n3 3 7 are all too small\nimpossible']
The value is 0.003
getting value for 4 - 5 = -1 (left: 6 10 -1)
6 * 10 = 60 (left: 60 -1)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n60 + (-1) = 59\n59 - 60 = -1\n(-1 - 60) + 60 = -61 + 60 = -1\n60 - 60 + (-1) = 0 + (-1) = -1\n(-1 + 60) - 60 = 59 - 60 = -1\n60 - 60 = 0\n0 + (-1) = -1\nimpossible', '\n60 + (-1) = 59\n60 - (-1) = 61\n60 * (-1) = -60\n60 / (-1) = -60\nI cannot obtain 24 now, but numbers are within a reasonable range\nlikely', '\n60 - (-1) = 61\nimpossible']
The value is 1.002
-- new step of 1

-- new_ys --: [('10 / 4 = 2.5 (left: 5 6 2.5)\n5 + 6 = 11 (left: 11 2.5)\n', 0, '5 + 6 = 11 (left: 11 2.5)'), ('10 / 4 = 2.5 (left: 5 6 2.5)\n5 * 6 = 30 (left: 30 2.5)\n', 0, '5 * 6 = 30 (left: 30 2.5)'), ('10 / 4 = 2.5 (left: 5 6 2.5)\n6 + 5 = 11 (left: 11 2.5)\n', 0, '6 + 5 = 11 (left: 11 2.5)'), ('10 / 4 = 2.5 (left: 5 6 2.5)\n5 / 6 = 0.83 (left: 0.83 2.5)\n', 0, '5 / 6 = 0.83 (left: 0.83 2.5)'), ('10 / 4 = 2.5 (left: 5 6 2.5)\n6 / 5 = 1.2 (left: 1.2 2.5)\n', 0, '6 / 5 = 1.2 (left: 1.2 2.5)'), ('10 / 4 = 2.5 (left: 5 6 2.5)\n2.5 + 5 = 7.5 (left: 7.5 6)\n', 0, '2.5 + 5 = 7.5 (left: 7.5 6)'), ('10 / 4 = 2.5 (left: 5 6 2.5)\n2.5 + 6 = 8.5 (left: 8.5 5)\n', 0, '2.5 + 6 = 8.5 (left: 8.5 5)'), ('10 / 4 = 2.5 (left: 5 6 2.5)\n5 + 2.5 = 7.5 (left: 7.5 6)\n', 0, '5 + 2.5 = 7.5 (left: 7.5 6)'), ('4 + 5 = 9 (left: 6 9 10)\n6 + 9 = 15 (left: 15 10)\n', 1, '6 + 9 = 15 (left: 15 10)'), ('4 + 5 = 9 (left: 6 9 10)\n6 * 9 = 54 (left: 54 10)\n', 1, '6 * 9 = 54 (left: 54 10)'), ('4 + 5 = 9 (left: 6 9 10)\n9 + 6 = 15 (left: 10 15)\n', 1, '9 + 6 = 15 (left: 10 15)'), ('4 + 5 = 9 (left: 6 9 10)\n10 - 6 = 4 (left: 4 9)\n', 1, '10 - 6 = 4 (left: 4 9)'), ('4 + 5 = 9 (left: 6 9 10)\n9 - 6 = 3 (left: 3 10)\n', 1, '9 - 6 = 3 (left: 3 10)'), ('4 + 5 = 9 (left: 6 9 10)\n6 + 10 = 16 (left: 16 9)\n', 1, '6 + 10 = 16 (left: 16 9)'), ('4 + 5 = 9 (left: 6 9 10)\n6 - 9 = -3 (left: -3 10)\n', 1, '6 - 9 = -3 (left: -3 10)'), ('4 + 5 = 9 (left: 6 9 10)\n10 / 6 = 1.67 (left: 1.67 9)\n', 1, '10 / 6 = 1.67 (left: 1.67 9)'), ('4 * 5 = 20 (left: 6 10 20)\n1. 6 + 10 = 16 (left: 16 20)\n', 2, '1. 6 + 10 = 16 (left: 16 20)'), ('4 * 5 = 20 (left: 6 10 20)\n2. 10 + 6 = 16 (left: 16 20)\n', 2, '2. 10 + 6 = 16 (left: 16 20)'), ('4 * 5 = 20 (left: 6 10 20)\n3. 20 - 6 = 14 (left: 14 10)\n', 2, '3. 20 - 6 = 14 (left: 14 10)'), ('4 * 5 = 20 (left: 6 10 20)\n4. 10 - 6 = 4 (left: 4 20)\n', 2, '4. 10 - 6 = 4 (left: 4 20)'), ('4 * 5 = 20 (left: 6 10 20)\n5. 20 / 6 = 3.33 (left: 3.33 10)\n', 2, '5. 20 / 6 = 3.33 (left: 3.33 10)'), ('4 * 5 = 20 (left: 6 10 20)\n6. 10 / 6 = 1.67 (left: 1.67 20)\n', 2, '6. 10 / 6 = 1.67 (left: 1.67 20)'), ('4 * 5 = 20 (left: 6 10 20)\n7. 6 * 10 = 60 (left: 60 20)\n', 2, '7. 6 * 10 = 60 (left: 60 20)'), ('4 * 5 = 20 (left: 6 10 20)\n8. 20 - 10 = 10 (left: 6 10)\n', 2, '8. 20 - 10 = 10 (left: 6 10)'), ('5 + 4 = 9 (left: 6 9 10)\n6 + 9 = 15 (left: 15 10)\n', 3, '6 + 9 = 15 (left: 15 10)'), ('5 + 4 = 9 (left: 6 9 10)\n6 * 9 = 54 (left: 54 10)\n', 3, '6 * 9 = 54 (left: 54 10)'), ('5 + 4 = 9 (left: 6 9 10)\n9 - 6 = 3 (left: 3 10)\n', 3, '9 - 6 = 3 (left: 3 10)'), ('5 + 4 = 9 (left: 6 9 10)\n10 + 6 = 16 (left: 16 9)\n', 3, '10 + 6 = 16 (left: 16 9)'), ('5 + 4 = 9 (left: 6 9 10)\n9 / 6 = 1.5 (left: 1.5 10)\n', 3, '9 / 6 = 1.5 (left: 1.5 10)'), ('5 + 4 = 9 (left: 6 9 10)\n10 - 9 = 1 (left: 1 6)\n', 3, '10 - 9 = 1 (left: 1 6)'), ('5 + 4 = 9 (left: 6 9 10)\n6 + 10 = 16 (left: 16 9)\n', 3, '6 + 10 = 16 (left: 16 9)'), ('5 + 4 = 9 (left: 6 9 10)\n9 + 6 = 15 (left: 15 10)\n', 3, '9 + 6 = 15 (left: 15 10)'), ('4 - 5 = -1 (left: 6 10 -1)\n6 + 10 = 16 (left: 16 -1)\n', 4, '6 + 10 = 16 (left: 16 -1)'), ('4 - 5 = -1 (left: 6 10 -1)\n10 - 6 = 4 (left: 4 -1)\n', 4, '10 - 6 = 4 (left: 4 -1)'), ('4 - 5 = -1 (left: 6 10 -1)\n-1 + 6 = 5 (left: 5 10)\n', 4, '-1 + 6 = 5 (left: 5 10)'), ('4 - 5 = -1 (left: 6 10 -1)\n-1 + 10 = 9 (left: 6 9)\n', 4, '-1 + 10 = 9 (left: 6 9)'), ('4 - 5 = -1 (left: 6 10 -1)\n10 + (-1) = 9 (left: 6 9)\n', 4, '10 + (-1) = 9 (left: 6 9)'), ('4 - 5 = -1 (left: 6 10 -1)\n6 - 10 = -4 (left: -4 -1)\n', 4, '6 - 10 = -4 (left: -4 -1)'), ('4 - 5 = -1 (left: 6 10 -1)\n-1 - 6 = -7 (left: 10 -7)\n', 4, '-1 - 6 = -7 (left: 10 -7)'), ('4 - 5 = -1 (left: 6 10 -1)\n6 * 10 = 60 (left: 60 -1)\n', 4, '6 * 10 = 60 (left: 60 -1)')]
-- values -- [0.003, 1.002, 0.003, 2.001, 2.001, 2.001, 3.0, 2.001, 0.003, 20.002, 1.002, 0.003, 0.003, 1.002, 0.003, 1.002, 1.002, 1.002, 60.0, 60.0, 1.002, 3.0, 20.002, 40.001, 0.003, 20.002, 0.003, 1.002, 20.002, 0.003, 1.002, 0.003, 1.002, 20.002, 0.003, 1.002, 1.002, 0.003, 0.003, 1.002]
-- sorted_new_ys --: (('4 * 5 = 20 (left: 6 10 20)\n3. 20 - 6 = 14 (left: 14 10)\n', 2, '3. 20 - 6 = 14 (left: 14 10)'), ('4 * 5 = 20 (left: 6 10 20)\n4. 10 - 6 = 4 (left: 4 20)\n', 2, '4. 10 - 6 = 4 (left: 4 20)'), ('4 * 5 = 20 (left: 6 10 20)\n8. 20 - 10 = 10 (left: 6 10)\n', 2, '8. 20 - 10 = 10 (left: 6 10)'), ('4 + 5 = 9 (left: 6 9 10)\n6 * 9 = 54 (left: 54 10)\n', 1, '6 * 9 = 54 (left: 54 10)'), ('4 * 5 = 20 (left: 6 10 20)\n7. 6 * 10 = 60 (left: 60 20)\n', 2, '7. 6 * 10 = 60 (left: 60 20)'), ('5 + 4 = 9 (left: 6 9 10)\n6 * 9 = 54 (left: 54 10)\n', 3, '6 * 9 = 54 (left: 54 10)'), ('5 + 4 = 9 (left: 6 9 10)\n9 / 6 = 1.5 (left: 1.5 10)\n', 3, '9 / 6 = 1.5 (left: 1.5 10)'), ('4 - 5 = -1 (left: 6 10 -1)\n10 - 6 = 4 (left: 4 -1)\n', 4, '10 - 6 = 4 (left: 4 -1)'), ('10 / 4 = 2.5 (left: 5 6 2.5)\n2.5 + 6 = 8.5 (left: 8.5 5)\n', 0, '2.5 + 6 = 8.5 (left: 8.5 5)'), ('4 * 5 = 20 (left: 6 10 20)\n6. 10 / 6 = 1.67 (left: 1.67 20)\n', 2, '6. 10 / 6 = 1.67 (left: 1.67 20)'), ('10 / 4 = 2.5 (left: 5 6 2.5)\n5 / 6 = 0.83 (left: 0.83 2.5)\n', 0, '5 / 6 = 0.83 (left: 0.83 2.5)'), ('10 / 4 = 2.5 (left: 5 6 2.5)\n6 / 5 = 1.2 (left: 1.2 2.5)\n', 0, '6 / 5 = 1.2 (left: 1.2 2.5)'), ('10 / 4 = 2.5 (left: 5 6 2.5)\n2.5 + 5 = 7.5 (left: 7.5 6)\n', 0, '2.5 + 5 = 7.5 (left: 7.5 6)'), ('10 / 4 = 2.5 (left: 5 6 2.5)\n5 + 2.5 = 7.5 (left: 7.5 6)\n', 0, '5 + 2.5 = 7.5 (left: 7.5 6)'), ('10 / 4 = 2.5 (left: 5 6 2.5)\n5 * 6 = 30 (left: 30 2.5)\n', 0, '5 * 6 = 30 (left: 30 2.5)'), ('4 + 5 = 9 (left: 6 9 10)\n9 + 6 = 15 (left: 10 15)\n', 1, '9 + 6 = 15 (left: 10 15)'), ('4 + 5 = 9 (left: 6 9 10)\n6 + 10 = 16 (left: 16 9)\n', 1, '6 + 10 = 16 (left: 16 9)'), ('4 + 5 = 9 (left: 6 9 10)\n10 / 6 = 1.67 (left: 1.67 9)\n', 1, '10 / 6 = 1.67 (left: 1.67 9)'), ('4 * 5 = 20 (left: 6 10 20)\n1. 6 + 10 = 16 (left: 16 20)\n', 2, '1. 6 + 10 = 16 (left: 16 20)'), ('4 * 5 = 20 (left: 6 10 20)\n2. 10 + 6 = 16 (left: 16 20)\n', 2, '2. 10 + 6 = 16 (left: 16 20)'), ('4 * 5 = 20 (left: 6 10 20)\n5. 20 / 6 = 3.33 (left: 3.33 10)\n', 2, '5. 20 / 6 = 3.33 (left: 3.33 10)'), ('5 + 4 = 9 (left: 6 9 10)\n10 + 6 = 16 (left: 16 9)\n', 3, '10 + 6 = 16 (left: 16 9)'), ('5 + 4 = 9 (left: 6 9 10)\n6 + 10 = 16 (left: 16 9)\n', 3, '6 + 10 = 16 (left: 16 9)'), ('4 - 5 = -1 (left: 6 10 -1)\n6 + 10 = 16 (left: 16 -1)\n', 4, '6 + 10 = 16 (left: 16 -1)'), ('4 - 5 = -1 (left: 6 10 -1)\n-1 + 10 = 9 (left: 6 9)\n', 4, '-1 + 10 = 9 (left: 6 9)'), ('4 - 5 = -1 (left: 6 10 -1)\n10 + (-1) = 9 (left: 6 9)\n', 4, '10 + (-1) = 9 (left: 6 9)'), ('4 - 5 = -1 (left: 6 10 -1)\n6 * 10 = 60 (left: 60 -1)\n', 4, '6 * 10 = 60 (left: 60 -1)'), ('10 / 4 = 2.5 (left: 5 6 2.5)\n5 + 6 = 11 (left: 11 2.5)\n', 0, '5 + 6 = 11 (left: 11 2.5)'), ('10 / 4 = 2.5 (left: 5 6 2.5)\n6 + 5 = 11 (left: 11 2.5)\n', 0, '6 + 5 = 11 (left: 11 2.5)'), ('4 + 5 = 9 (left: 6 9 10)\n6 + 9 = 15 (left: 15 10)\n', 1, '6 + 9 = 15 (left: 15 10)'), ('4 + 5 = 9 (left: 6 9 10)\n10 - 6 = 4 (left: 4 9)\n', 1, '10 - 6 = 4 (left: 4 9)'), ('4 + 5 = 9 (left: 6 9 10)\n9 - 6 = 3 (left: 3 10)\n', 1, '9 - 6 = 3 (left: 3 10)'), ('4 + 5 = 9 (left: 6 9 10)\n6 - 9 = -3 (left: -3 10)\n', 1, '6 - 9 = -3 (left: -3 10)'), ('5 + 4 = 9 (left: 6 9 10)\n6 + 9 = 15 (left: 15 10)\n', 3, '6 + 9 = 15 (left: 15 10)'), ('5 + 4 = 9 (left: 6 9 10)\n9 - 6 = 3 (left: 3 10)\n', 3, '9 - 6 = 3 (left: 3 10)'), ('5 + 4 = 9 (left: 6 9 10)\n10 - 9 = 1 (left: 1 6)\n', 3, '10 - 9 = 1 (left: 1 6)'), ('5 + 4 = 9 (left: 6 9 10)\n9 + 6 = 15 (left: 15 10)\n', 3, '9 + 6 = 15 (left: 15 10)'), ('4 - 5 = -1 (left: 6 10 -1)\n-1 + 6 = 5 (left: 5 10)\n', 4, '-1 + 6 = 5 (left: 5 10)'), ('4 - 5 = -1 (left: 6 10 -1)\n6 - 10 = -4 (left: -4 -1)\n', 4, '6 - 10 = -4 (left: -4 -1)'), ('4 - 5 = -1 (left: 6 10 -1)\n-1 - 6 = -7 (left: 10 -7)\n', 4, '-1 - 6 = -7 (left: 10 -7)'))
-- sol values --: (60.0, 60.0, 40.001, 20.002, 20.002, 20.002, 20.002, 20.002, 3.0, 3.0, 2.001, 2.001, 2.001, 2.001, 1.002, 1.002, 1.002, 1.002, 1.002, 1.002, 1.002, 1.002, 1.002, 1.002, 1.002, 1.002, 1.002, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003)
-- choices --: [('4 * 5 = 20 (left: 6 10 20)\n3. 20 - 6 = 14 (left: 14 10)\n', 2, '3. 20 - 6 = 14 (left: 14 10)'), ('4 * 5 = 20 (left: 6 10 20)\n4. 10 - 6 = 4 (left: 4 20)\n', 2, '4. 10 - 6 = 4 (left: 4 20)'), ('4 * 5 = 20 (left: 6 10 20)\n8. 20 - 10 = 10 (left: 6 10)\n', 2, '8. 20 - 10 = 10 (left: 6 10)'), ('4 + 5 = 9 (left: 6 9 10)\n6 * 9 = 54 (left: 54 10)\n', 1, '6 * 9 = 54 (left: 54 10)'), ('4 * 5 = 20 (left: 6 10 20)\n7. 6 * 10 = 60 (left: 60 20)\n', 2, '7. 6 * 10 = 60 (left: 60 20)')]

Start reasoning with step 2

number of prev level5
Getting proposals from index 0 with y = 4 * 5 = 20 (left: 6 10 20)
3. 20 - 6 = 14 (left: 14 10)

Current number is: 14 10

The proposals for 4 * 5 = 20 (left: 6 10 20)
3. 20 - 6 = 14 (left: 14 10)
 is 
 ['1. 14 + 10 = 24 (left: 24)', '2. 14 - 10 = 4 (left: 4 10)', '3. 10 - 14 = -4 (left: -4 14)', '4. 14 * 10 = 140 (left: 140)', '5. 10 / 14 = 0.71 (left: 0.71 14)', '6. 14 / 10 = 1.4 (left: 1.4 10)', '7. 10 + 14 = 24 (left: 24)', '8. 14 * 10 = 140 (left: 140)']
Getting proposals from index 1 with y = 4 * 5 = 20 (left: 6 10 20)
4. 10 - 6 = 4 (left: 4 20)

Current number is: 4 20

The proposals for 4 * 5 = 20 (left: 6 10 20)
4. 10 - 6 = 4 (left: 4 20)
 is 
 ['4 * 20 = 80 (left: 80)', '4 + 20 = 24 (left: 24)', '20 + 4 = 24 (left: 24)', '20 - 4 = 16 (left: 16)', '20 / 4 = 5 (left: 5)', '4 / 20 = 0.2 (left: 0.2)', '20 * 4 = 80 (left: 80)', '20 - 4 = 16 (left: 16)']
Getting proposals from index 2 with y = 4 * 5 = 20 (left: 6 10 20)
8. 20 - 10 = 10 (left: 6 10)

Current number is: 6 10

The proposals for 4 * 5 = 20 (left: 6 10 20)
8. 20 - 10 = 10 (left: 6 10)
 is 
 ['Input: 6 10', '6 + 10 = 16 (left: 16)', '6 * 10 = 60 (left: 60)', '10 / 6 = 1.67 (left: 1.67)', '10 - 6 = 4 (left: 4)', '6 / 10 = 0.6 (left: 0.6)', '10 - 6 = 4 (left: 4)', '6 * 10 = 60 (left: 60)', '6 + 10 = 16 (left: 16)']
Getting proposals from index 3 with y = 4 + 5 = 9 (left: 6 9 10)
6 * 9 = 54 (left: 54 10)

Current number is: 54 10

The proposals for 4 + 5 = 9 (left: 6 9 10)
6 * 9 = 54 (left: 54 10)
 is 
 ['54 - 10 = 44 (left: 44)', '10 + 54 = 64 (left: 64)', '54 / 10 = 5.4 (left: 5.4)', '54 + 10 = 64 (left: 64)', '10 * 54 = 540 (left: 540)', '54 * 10 = 540 (left: 540)', '10 - 54 = -44 (left: -44)', '54 / 5.4 = 10 (left: 10)']
Getting proposals from index 4 with y = 4 * 5 = 20 (left: 6 10 20)
7. 6 * 10 = 60 (left: 60 20)

Current number is: 60 20

The proposals for 4 * 5 = 20 (left: 6 10 20)
7. 6 * 10 = 60 (left: 60 20)
 is 
 ['60 + 20 = 80 (left: 80)', '60 - 20 = 40 (left: 40)', '20 + 60 = 80 (left: 80)', '20 - 60 = -40 (left: -40)', '60 * 20 = 1200 (left: 1200)', '20 / 60 = 0.33 (left: 0.33)', '20 * 3 + 60 = 100 (left: 100)', '60 / 20 = 3 (left: 3)']
getting value for 4 * 5 = 20 (left: 6 10 20)
3. 20 - 6 = 14 (left: 14 10)
1. 14 + 10 = 24 (left: 24)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n24  = 24        (remaining: 0)   # optional\n<final>    sure', '\n24  / 24  = 1        (remaining: 0)   \n1  * 24  = 24\n24  / 24  = 1        (remaining: 0)   \n1  * 24  = 24\nsure', '\n24  = 24        (remaining: 0)   # optional\n<final>    sure #']
The value is 60.0
getting value for 4 * 5 = 20 (left: 6 10 20)
3. 20 - 6 = 14 (left: 14 10)
2. 14 - 10 = 4 (left: 4 10)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n4 + 10 = 14\n(10 - 4) * 1 = 6 * 1 = 6\n(10 - 4) * (10 / 4) = 6 * 2.5 = 15\n(10 / 4) * 4 = 2.5 * 4 = 10\n(10 - 4) * 10 = 6 * 10 = 60\nimpossible', '\n4 + 10 = 14\n10 - 4 = 6\n4 * 10 = 40\n4 / 10 = 0.4\n4 10 are not enough, need more numbers\nimpossible', '\n4 + 10 = 14\n4 * 10 = 40\n10 + 4 = 14\n10 * 4 = 40\nimpossible']
The value is 0.003
getting value for 4 * 5 = 20 (left: 6 10 20)
3. 20 - 6 = 14 (left: 14 10)
3. 10 - 14 = -4 (left: -4 14)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n-4 14 = -4 + 14 = 10\n14 - (-4) = 18\n-4 * 14 = -56\n(-4 + 14) * 14 = 10 * 14 = 140\n(-4 + 14) / 14 = 0.71\n(-4 * 14) / (-4) = -14\nimpossible', '\n-4 + 14 = 10\n14 - (-4) = 14 + 4 = 18\n14 / (-4) = -3.5\nimpossible', '\n-4 + 14 = 10\n14 - (-4) = 14 + 4 = 18\n14 * (-4) = -56\n14 / (-4) = -3.5\n-4 + 14 = 10\n-4 * 14 = -56\nI cannot obtain 24 now, but numbers are within a reasonable range\nlikely']
The value is 1.002
getting value for 4 * 5 = 20 (left: 6 10 20)
3. 20 - 6 = 14 (left: 14 10)
4. 14 * 10 = 140 (left: 140)

Number of value needed is 3, this time we have 2 valid output
Number of value needed is 1, this time we have 1 valid output
The valid outputs are ['\n140 + 0 = 140\n140 - 0 = 140\n140 * 0 = 0\n140 / 0 = impossible\nimpossible', '\n140 + 0 = 140\n140 0 = 140\nimpossible', '\n140 / 10 = 14\n14 10 = 140\nsure']
The value is 20.003
getting value for 4 * 5 = 20 (left: 6 10 20)
3. 20 - 6 = 14 (left: 14 10)
5. 10 / 14 = 0.71 (left: 0.71 14)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n0.71 * 14 = 9.94\n14 - 0.71 = 13.29\n0.71 + 13.29 = 14\n14 * 0.71 = 9.94\nI cannot obtain 24 now, but numbers are within a reasonable range\nlikely', '\n0.71 + 14 = 14.71\n14 0.71 = 13.29\n14 / 0.71 = 19.72\n(14 - 0.71) * 0.71 = 13.29 * 0.71 = 9.40\n(14 - 0.71) * 0.71 = 13.29 * 0.71 = 9.40\nI cannot obtain 24 now, but numbers are within a reasonable range\nlikely', '\n0.71 + 14 = 14.71\n14.71 * 1.64 = 24.01\n(14.71 - 0.71) * 1.64 = 14 * 1.64 = 22.96\n(14.71 - 0.71) * (14.71 / 0.71) = 14 * 20.77 = 286.78\nimpossible']
The value is 2.001
getting value for 4 * 5 = 20 (left: 6 10 20)
3. 20 - 6 = 14 (left: 14 10)
6. 14 / 10 = 1.4 (left: 1.4 10)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n1.4 * 10 = 14\n(10 - 1.4) * 1.4 = 8.6 * 1.4 = 12.04\n(10 - 1.4) * (1.4 + 1) = 8.6 * 2.4 = 20.64\nI cannot obtain 24 now, but numbers are within a reasonable range\nlikely', '\n1.4 * 10 = 14\n14 + 10 = 24\nsure', '\n1.4 + 10 = 11.4\n10 - 1.4 = 8.6\n1.4 * 10 = 14\n1.4 / 10 = 0.14\nimpossible']
The value is 21.001
getting value for 4 * 5 = 20 (left: 6 10 20)
3. 20 - 6 = 14 (left: 14 10)
7. 10 + 14 = 24 (left: 24)

getting value for 4 * 5 = 20 (left: 6 10 20)
3. 20 - 6 = 14 (left: 14 10)
8. 14 * 10 = 140 (left: 140)

getting value for 4 * 5 = 20 (left: 6 10 20)
4. 10 - 6 = 4 (left: 4 20)
4 * 20 = 80 (left: 80)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n80 + 80 = 160\n80 80 are too big\nimpossible', '\n80 + 80 = 160\n(80 - 80) * 80 = 0 * 80 = 0\n80 / (80 - 80) = 80 / 0 = NaN\nI cannot obtain 24 now, but numbers are within a reasonable range\nlikely', '\n80 / 1 = 80\n80 / 80 = 1\n1 + 80 = 81\n80 1 are all too big\nimpossible']
The value is 1.002
getting value for 4 * 5 = 20 (left: 6 10 20)
4. 10 - 6 = 4 (left: 4 20)
4 + 20 = 24 (left: 24)

getting value for 4 * 5 = 20 (left: 6 10 20)
4. 10 - 6 = 4 (left: 4 20)
20 + 4 = 24 (left: 24)

getting value for 4 * 5 = 20 (left: 6 10 20)
4. 10 - 6 = 4 (left: 4 20)
20 - 4 = 16 (left: 16)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n16 + 8 = 24\nsure', '\n16 1 * 16 = 16\n16 1 + 16 = 17\n16 2 * 16 = 32\n16 2 + 16 = 18\n16 4 * 16 = 64\n16 4 + 16 = 20\n16 8 * 16 = 128\n16 8 + 16 = 24\nsure', '\n16 + 8 = 24\nsure']
The value is 60.0
getting value for 4 * 5 = 20 (left: 6 10 20)
4. 10 - 6 = 4 (left: 4 20)
20 / 4 = 5 (left: 5)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n5  =  5        (remaining: 19)   \nimpossible', '\n5 + 5 = 10\n5 * 5 = 25\nimpossible', '\n5 + 5 = 10\n(5 - 5) * 5 = 0 * 5 = 0\n5 * 5 = 25\n5 / 5 = 1\n5  5 5 are all too small\nimpossible']
The value is 0.003
getting value for 4 * 5 = 20 (left: 6 10 20)
4. 10 - 6 = 4 (left: 4 20)
4 / 20 = 0.2 (left: 0.2)

Number of value needed is 3, this time we have 2 valid output
Number of value needed is 1, this time we have 1 valid output
The valid outputs are ['\n0.2 2 * = 0.4\n0.2 + 2 = 2.2\n0.2 / 2 = 0.1\n0.2 - 2 = -1.8\nimpossible', '\n0.2  + 0 = 0.2        (remaining: 24)   # optional\n0.2 * 0 = 0\n0.2 / 0 = impossible\nimpossible', '\n0.2 0.2 = 0.4\n0.4 * 6 = 2.4\n0.2 * 12 = 2.4\n0.2 0.2 0.2 = 0.6\n0.6 0.4 = 1\n0.2 * 1.2 = 0.24\n0.2 * 12 = 2.4\n0.24 * 10 = 2.4\nimpossible']
The value is 0.004
getting value for 4 * 5 = 20 (left: 6 10 20)
4. 10 - 6 = 4 (left: 4 20)
20 * 4 = 80 (left: 80)

getting value for 4 * 5 = 20 (left: 6 10 20)
8. 20 - 10 = 10 (left: 6 10)
Input: 6 10

Number of value needed is 3, this time we have 2 valid output
Number of value needed is 1, this time we have 0 valid output
Number of value needed is 1, this time we have 1 valid output
The valid outputs are ["\nTo obtain 24, I will try to use the numbers 4, 5, and 6 in the answer. Since the answer is supposed to be 24, I will divide 24 by the numbers 4, 5, and 6 to see if any of them are the result of a division.\n\n24 / 4 = 6\n24 / 6 = 4\n24 / 5 is not an integer\n\nThe answer 6 10 is not correct because it doesn't use the number 5 and it doesn't use the number 4 and 6 in a correct way.\n\nJudge: \nimpossible", '\nJudge: \nimpossible', '\nJudge: \nimpossible']
The value is 0.003
getting value for 4 * 5 = 20 (left: 6 10 20)
8. 20 - 10 = 10 (left: 6 10)
6 + 10 = 16 (left: 16)

getting value for 4 * 5 = 20 (left: 6 10 20)
8. 20 - 10 = 10 (left: 6 10)
6 * 10 = 60 (left: 60)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n60 / 1 = 60\n60 / 2 = 30\n30 / 6 = 5\n5 * 4 = 20\n20 + 4 = 24\nsure', '\n60 10 = 60\n60 / 10 = 6\n6 4 = 6 + 4 = 10\n10 2 = 10 + 2 = 12\n12 * 2 = 24\nsure', '\n60 60 = 3600\n3600 / 60 = 60\n60 60 are too big\nimpossible']
The value is 40.001
getting value for 4 * 5 = 20 (left: 6 10 20)
8. 20 - 10 = 10 (left: 6 10)
10 / 6 = 1.67 (left: 1.67)

Number of value needed is 3, this time we have 2 valid output
Number of value needed is 1, this time we have 1 valid output
The valid outputs are ['\n1.67 cannot be used in the usual arithmetic operations with itself to reach 24\nimpossible', '\n1.67 * 1.67 = 2.80\n1.67 / 1.67 = 1\n1.67 + 1.67 = 3.34\n1.67 - 1.67 = 0\nimpossible', '\n1.67 = 1.67        (remaining: 0)   # optional\nimpossible']
The value is 0.003
getting value for 4 * 5 = 20 (left: 6 10 20)
8. 20 - 10 = 10 (left: 6 10)
10 - 6 = 4 (left: 4)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n4  + 4  = 8        (remaining: 16)   # optional\n8  + 4  = 12\n8  * 4  = 32\n8 / 4  = 2\nimpossible', '\n4  *  6  =  24\n(6 - 4)  *  4  =  8  *  4  =  32\n(4 + 4)  *  4  =  8  *  4  =  32\nimpossible', '\n4 + 4 = 8\n4 * 4 = 16\n(4 + 4) * 1 = 8 * 1 = 8\n4 4 are all too small\nimpossible']
The value is 0.003
getting value for 4 * 5 = 20 (left: 6 10 20)
8. 20 - 10 = 10 (left: 6 10)
6 / 10 = 0.6 (left: 0.6)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n0.6 2 = 1.2        (remaining: 1.2, 1.2)\n1.2 2 = 2.4\n2.4 2 = 4.8\n4.8 2 = 9.6\n9.6 2 = 19.2\n19.2 2 = 38.4\n38.4 2 = 76.8\n76.8 2 = 153.6\n(76.8 + 0.6) * 2 = 77.4 * 2 = 154.8\nimpossible', '\n0.6 + 0 = 0.6\n0.6 * 0 = 0\n0.6 0 are all too small\nimpossible', '\n0.6 + 0.6 = 1.2\n1.2 * 20 = 24\nsure']
The value is 20.002
getting value for 4 + 5 = 9 (left: 6 9 10)
6 * 9 = 54 (left: 54 10)
54 - 10 = 44 (left: 44)

Number of value needed is 3, this time we have 2 valid output
Number of value needed is 1, this time we have 1 valid output
The valid outputs are ['\n44 + 0 = 44\n44 / 1 = 44\n44  op  1 = 44\n44  op  0 = 44\nimpossible', '\n44 + 0 = 44\n44 - 20 = 24\nsure', '\n44 + 0 = 44\n44 * 0.55 = 24.2\n44 0.55 are not too small\n44 0.55 are not too big\nimpossible']
The value is 20.002
getting value for 4 + 5 = 9 (left: 6 9 10)
6 * 9 = 54 (left: 54 10)
10 + 54 = 64 (left: 64)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n64 / 2 = 32\n32 / 2 = 16\n16 / 2 = 8\n8 / 2 = 4\n4 / 2 = 2\nimpossible', '\n64 + 0 = 64\n64 * 0 = 0\n64 / 0 = impossible (division by zero)\nimpossible', '\n64 + 64 = 128\n64 - 64 = 0\n64 * 64 = 4096\n64 / 64 = 1\n64 cannot be reached with these operations\nimpossible']
The value is 0.004
getting value for 4 + 5 = 9 (left: 6 9 10)
6 * 9 = 54 (left: 54 10)
54 / 10 = 5.4 (left: 5.4)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n5.4 + 0 = 5.4\n5.4 * 4.5 = 24.3\n(5.4 - 0) * 4.5 = 24.3\n(5.4 / 4.5) * 4.5 = 4.8 * 4.5 = 21.6\n(5.4 / 4.5) * (4.5 * 4.5) = 4.8 * 20.25 = 97.2\n(5.4 / 4.5) * (4.5 * 4.5 * 4.5) = 4.8 * 99.5625 = 479.25\nimpossible', '\n5.4  =  5.4        (remaining: 0)   # optional\nimpossible', '\n5.4 + 0 = 5.4\n5.4 - 0 = 5.4\n5.4 * 0 = 0\n5.4 / 0 = impossible\nimpossible']
The value is 0.004
getting value for 4 + 5 = 9 (left: 6 9 10)
6 * 9 = 54 (left: 54 10)
54 + 10 = 64 (left: 64)

getting value for 4 + 5 = 9 (left: 6 9 10)
6 * 9 = 54 (left: 54 10)
10 * 54 = 540 (left: 540)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n540 540 = 324000\n324000 / 540 = 600\n600 / 540 = 1.11\nimpossible', '\n540 / 1 = 540\n540 / 2 = 270\n270 / 10 = 27\nimpossible', '\n540 / 2 = 270\n270 / 2 = 135\n135 / 3 = 45\n45 / 3 = 15\n15 * 2 = 30\n30 * 4 = 120\n120 * 2 = 240\n240 / 2 = 120\n120 * 2 = 240\n240 / 2 = 120\n120 * 2 = 240\nimpossible']
The value is 0.003
getting value for 4 + 5 = 9 (left: 6 9 10)
6 * 9 = 54 (left: 54 10)
54 * 10 = 540 (left: 540)

getting value for 4 + 5 = 9 (left: 6 9 10)
6 * 9 = 54 (left: 54 10)
10 - 54 = -44 (left: -44)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n-44 + 44 = 0\nimpossible', '\n-44 + 44 = 0\n-44 * -44 = 1936\nimpossible', '\n-44  - 44 = -88\n-44 / -44 = 1\nI cannot obtain 24 now, but numbers are within a reasonable range\nlikely']
The value is 1.002
getting value for 4 + 5 = 9 (left: 6 9 10)
6 * 9 = 54 (left: 54 10)
54 / 5.4 = 10 (left: 10)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n10 10 = 20\n10 + 10 = 20\n10 10 are all too small\nimpossible', '\n10 10 = 20\n10 + 10 = 20\n10 * 10 = 100\n10 / 10 = 1\nimpossible', '\n10 10 = 20\n10 + 10 = 20\n10 10 are all too small\nimpossible']
The value is 0.003
getting value for 4 * 5 = 20 (left: 6 10 20)
7. 6 * 10 = 60 (left: 60 20)
60 + 20 = 80 (left: 80)

getting value for 4 * 5 = 20 (left: 6 10 20)
7. 6 * 10 = 60 (left: 60 20)
60 - 20 = 40 (left: 40)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n40 1 = 41\n40 2 = 20\n40 3 = 13\n40 4 = 10\n40 5 = 8\n40 6 = 6.67\n40 7 = 5.71\n40 8 = 5\n40 9 = 4.44\n40 10 = 4\n40 11 = 3.64\n40 12 = 3.33\n40 13 = 3.08\n40 14 = 2.86\n40 15 = 2.67\n40 16 = 2.5\n40 17 = 2.35\n40 18 = 2.22\n40 19 = 2.11\n40 20 = 2\n40 21 = 1.9\n40 22 = 1.82\n40 23 = 1.74\n40 24 = 1.67\n40 25 = 1.6\n40 26 = 1.54\n40 27 = 1.48\n40 28 = 1.43\n40 29 = 1.38\n40 30 = 1.33\n40 31 = 1.29\n40 32 = 1.25\n40 33 = 1.21\n40 34 = 1.18\n40 35 = 1.14\n40 36 = 1.11\n40 37 = 1.08\n40 38 = 1.05\n40 39 = 1.03\n40 40 = 1\n40 41 = 0.98\n40 42 = 0.95\n40 43 = 0.93\n40 44 = 0.91\n40 45 = 0.89\n40 46 = 0.87\n40 47 = 0.85\n40 48 = 0.83\n40 49 = 0.82\n40 50 = 0.8\n40 51 = 0.78\n40 52 = 0.77\n40 53 = 0.75\n40 54 = 0.74\n40 55 = 0.73\n40 56 = 0.71\n40 57 = 0.7\n40 58 = 0.69\n40 59 = 0.68\n40 60 = 0.67\nimpossible', '\n40 1 = 41\n41 - 1 = 40\n40 1 = 40\n40 40 / 1 = 40\n40 40 / 40 = 1\n40 * 1 = 40\n40 / 1 = 40\nimpossible', '\n40 1 = 41\n40 - 1 = 39\n(40 - 1) * 1 = 39 * 1 = 39\n(1 + 40) * 1 = 41 * 1 = 41\n40 1 = 41\nimpossible']
The value is 0.003
getting value for 4 * 5 = 20 (left: 6 10 20)
7. 6 * 10 = 60 (left: 60 20)
20 + 60 = 80 (left: 80)

getting value for 4 * 5 = 20 (left: 6 10 20)
7. 6 * 10 = 60 (left: 60 20)
20 - 60 = -40 (left: -40)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n-40  any number multiplied by -40 will result in a negative number\n-40 / -4 = 10\n10  any number multiplied by 10 will result in a number that is a multiple of 10\n10 * -2.4 = 24\nsure', '\n-40 + 40 = 0\n-40 * -40 = 1600\n-40 40 are both too big\nimpossible', '\n-40  =  -40\nimpossible']
The value is 20.002
getting value for 4 * 5 = 20 (left: 6 10 20)
7. 6 * 10 = 60 (left: 60 20)
60 * 20 = 1200 (left: 1200)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n1200 + 0 = 1200        (remaining: 24)   # optional\n1200 / 0 = NaN\n1200 - 0 = 1200\n1200 * 0 = 0\nimpossible', '\n1200 + 1200 = 2400\n(1200 - 1200) * 1 = 0\n1200 1200 are all too big\nimpossible', '\n1200 / 10 = 120\n1200 / 12 = 100\n1200 / 8 = 150\n1200 / 5 = 240\nimpossible']
The value is 0.003
getting value for 4 * 5 = 20 (left: 6 10 20)
7. 6 * 10 = 60 (left: 60 20)
20 / 60 = 0.33 (left: 0.33)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n0.33 + 0 = 0.33\n0.33 * 0.33 = 0.11\nI cannot obtain 24 now, but numbers are within a reasonable range\nlikely', '\n0.33 + 0.33 = 0.66\n0.66 + 0.66 = 1.32\n1.32 + 1.32 = 2.64\n1.32 * 1.32 = 1.744\nimpossible', '\n0.33 * 3 = 0.99\n0.33 + 0.33 + 0.33 = 1.00\n0.33 * 3 = 0.99\nI cannot obtain 24 now, but numbers are within a reasonable range\nlikely']
The value is 2.001
getting value for 4 * 5 = 20 (left: 6 10 20)
7. 6 * 10 = 60 (left: 60 20)
20 * 3 + 60 = 100 (left: 100)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n100 * 0.24 = 24\n100 / 1.2 = 83.33\n100 - 76 = 24\n76 - 52 = 24\n52 - 28 = 24\n28 - 4 = 24\n4 - (-4) = 8\n4 - (-8) = 12\n4 - (-12) = 16\n4 - (-16) = 20\n4 - (-20) = 24\n4 - (-24) = 28\n4 - (-28) = 32\n4 - (-32) = 36\n4 - (-36) = 40\n4 - (-40) = 44\n4 - (-44) = 48\n4 - (-48) = 52\n4 - (-52) = 56\n4 - (-56) = 60\n4 - (-60) = 64\n4 - (-64) = 68\n4 - (-68) = 72\n4 - (-72) = 76\n4 - (-76) = 80\n4 - (-80) = 84\n4 - (-84) = 88\n4 - (-88) = 92\n4 - (-92) = 96\n4 - (-96) = 100\nimpossible', '\n100 + 24 = 124\n100 * 0.24 = 24\n100 / 1.2 = 83.33\n100 24 are too far apart\nimpossible', '\n100 + 0 = 100\n100 0 are all too small\nimpossible']
The value is 0.003
getting value for 4 * 5 = 20 (left: 6 10 20)
7. 6 * 10 = 60 (left: 60 20)
60 / 20 = 3 (left: 3)

Number of value needed is 3, this time we have 3 valid output
The valid outputs are ['\n3 cannot be used to reach 24\nimpossible', '\n3 * 8 = 24\nlikely', '\n3 3 3 are all too small\nimpossible']
The value is 1.002
-- new step of 2

-- new_ys --: [('4 * 5 = 20 (left: 6 10 20)\n3. 20 - 6 = 14 (left: 14 10)\n1. 14 + 10 = 24 (left: 24)\n', 0, '1. 14 + 10 = 24 (left: 24)'), ('4 * 5 = 20 (left: 6 10 20)\n3. 20 - 6 = 14 (left: 14 10)\n2. 14 - 10 = 4 (left: 4 10)\n', 0, '2. 14 - 10 = 4 (left: 4 10)'), ('4 * 5 = 20 (left: 6 10 20)\n3. 20 - 6 = 14 (left: 14 10)\n3. 10 - 14 = -4 (left: -4 14)\n', 0, '3. 10 - 14 = -4 (left: -4 14)'), ('4 * 5 = 20 (left: 6 10 20)\n3. 20 - 6 = 14 (left: 14 10)\n4. 14 * 10 = 140 (left: 140)\n', 0, '4. 14 * 10 = 140 (left: 140)'), ('4 * 5 = 20 (left: 6 10 20)\n3. 20 - 6 = 14 (left: 14 10)\n5. 10 / 14 = 0.71 (left: 0.71 14)\n', 0, '5. 10 / 14 = 0.71 (left: 0.71 14)'), ('4 * 5 = 20 (left: 6 10 20)\n3. 20 - 6 = 14 (left: 14 10)\n6. 14 / 10 = 1.4 (left: 1.4 10)\n', 0, '6. 14 / 10 = 1.4 (left: 1.4 10)'), ('4 * 5 = 20 (left: 6 10 20)\n3. 20 - 6 = 14 (left: 14 10)\n7. 10 + 14 = 24 (left: 24)\n', 0, '7. 10 + 14 = 24 (left: 24)'), ('4 * 5 = 20 (left: 6 10 20)\n3. 20 - 6 = 14 (left: 14 10)\n8. 14 * 10 = 140 (left: 140)\n', 0, '8. 14 * 10 = 140 (left: 140)'), ('4 * 5 = 20 (left: 6 10 20)\n4. 10 - 6 = 4 (left: 4 20)\n4 * 20 = 80 (left: 80)\n', 1, '4 * 20 = 80 (left: 80)'), ('4 * 5 = 20 (left: 6 10 20)\n4. 10 - 6 = 4 (left: 4 20)\n4 + 20 = 24 (left: 24)\n', 1, '4 + 20 = 24 (left: 24)'), ('4 * 5 = 20 (left: 6 10 20)\n4. 10 - 6 = 4 (left: 4 20)\n20 + 4 = 24 (left: 24)\n', 1, '20 + 4 = 24 (left: 24)'), ('4 * 5 = 20 (left: 6 10 20)\n4. 10 - 6 = 4 (left: 4 20)\n20 - 4 = 16 (left: 16)\n', 1, '20 - 4 = 16 (left: 16)'), ('4 * 5 = 20 (left: 6 10 20)\n4. 10 - 6 = 4 (left: 4 20)\n20 / 4 = 5 (left: 5)\n', 1, '20 / 4 = 5 (left: 5)'), ('4 * 5 = 20 (left: 6 10 20)\n4. 10 - 6 = 4 (left: 4 20)\n4 / 20 = 0.2 (left: 0.2)\n', 1, '4 / 20 = 0.2 (left: 0.2)'), ('4 * 5 = 20 (left: 6 10 20)\n4. 10 - 6 = 4 (left: 4 20)\n20 * 4 = 80 (left: 80)\n', 1, '20 * 4 = 80 (left: 80)'), ('4 * 5 = 20 (left: 6 10 20)\n4. 10 - 6 = 4 (left: 4 20)\n20 - 4 = 16 (left: 16)\n', 1, '20 - 4 = 16 (left: 16)'), ('4 * 5 = 20 (left: 6 10 20)\n8. 20 - 10 = 10 (left: 6 10)\nInput: 6 10\n', 2, 'Input: 6 10'), ('4 * 5 = 20 (left: 6 10 20)\n8. 20 - 10 = 10 (left: 6 10)\n6 + 10 = 16 (left: 16)\n', 2, '6 + 10 = 16 (left: 16)'), ('4 * 5 = 20 (left: 6 10 20)\n8. 20 - 10 = 10 (left: 6 10)\n6 * 10 = 60 (left: 60)\n', 2, '6 * 10 = 60 (left: 60)'), ('4 * 5 = 20 (left: 6 10 20)\n8. 20 - 10 = 10 (left: 6 10)\n10 / 6 = 1.67 (left: 1.67)\n', 2, '10 / 6 = 1.67 (left: 1.67)'), ('4 * 5 = 20 (left: 6 10 20)\n8. 20 - 10 = 10 (left: 6 10)\n10 - 6 = 4 (left: 4)\n', 2, '10 - 6 = 4 (left: 4)'), ('4 * 5 = 20 (left: 6 10 20)\n8. 20 - 10 = 10 (left: 6 10)\n6 / 10 = 0.6 (left: 0.6)\n', 2, '6 / 10 = 0.6 (left: 0.6)'), ('4 * 5 = 20 (left: 6 10 20)\n8. 20 - 10 = 10 (left: 6 10)\n10 - 6 = 4 (left: 4)\n', 2, '10 - 6 = 4 (left: 4)'), ('4 * 5 = 20 (left: 6 10 20)\n8. 20 - 10 = 10 (left: 6 10)\n6 * 10 = 60 (left: 60)\n', 2, '6 * 10 = 60 (left: 60)'), ('4 * 5 = 20 (left: 6 10 20)\n8. 20 - 10 = 10 (left: 6 10)\n6 + 10 = 16 (left: 16)\n', 2, '6 + 10 = 16 (left: 16)'), ('4 + 5 = 9 (left: 6 9 10)\n6 * 9 = 54 (left: 54 10)\n54 - 10 = 44 (left: 44)\n', 3, '54 - 10 = 44 (left: 44)'), ('4 + 5 = 9 (left: 6 9 10)\n6 * 9 = 54 (left: 54 10)\n10 + 54 = 64 (left: 64)\n', 3, '10 + 54 = 64 (left: 64)'), ('4 + 5 = 9 (left: 6 9 10)\n6 * 9 = 54 (left: 54 10)\n54 / 10 = 5.4 (left: 5.4)\n', 3, '54 / 10 = 5.4 (left: 5.4)'), ('4 + 5 = 9 (left: 6 9 10)\n6 * 9 = 54 (left: 54 10)\n54 + 10 = 64 (left: 64)\n', 3, '54 + 10 = 64 (left: 64)'), ('4 + 5 = 9 (left: 6 9 10)\n6 * 9 = 54 (left: 54 10)\n10 * 54 = 540 (left: 540)\n', 3, '10 * 54 = 540 (left: 540)'), ('4 + 5 = 9 (left: 6 9 10)\n6 * 9 = 54 (left: 54 10)\n54 * 10 = 540 (left: 540)\n', 3, '54 * 10 = 540 (left: 540)'), ('4 + 5 = 9 (left: 6 9 10)\n6 * 9 = 54 (left: 54 10)\n10 - 54 = -44 (left: -44)\n', 3, '10 - 54 = -44 (left: -44)'), ('4 + 5 = 9 (left: 6 9 10)\n6 * 9 = 54 (left: 54 10)\n54 / 5.4 = 10 (left: 10)\n', 3, '54 / 5.4 = 10 (left: 10)'), ('4 * 5 = 20 (left: 6 10 20)\n7. 6 * 10 = 60 (left: 60 20)\n60 + 20 = 80 (left: 80)\n', 4, '60 + 20 = 80 (left: 80)'), ('4 * 5 = 20 (left: 6 10 20)\n7. 6 * 10 = 60 (left: 60 20)\n60 - 20 = 40 (left: 40)\n', 4, '60 - 20 = 40 (left: 40)'), ('4 * 5 = 20 (left: 6 10 20)\n7. 6 * 10 = 60 (left: 60 20)\n20 + 60 = 80 (left: 80)\n', 4, '20 + 60 = 80 (left: 80)'), ('4 * 5 = 20 (left: 6 10 20)\n7. 6 * 10 = 60 (left: 60 20)\n20 - 60 = -40 (left: -40)\n', 4, '20 - 60 = -40 (left: -40)'), ('4 * 5 = 20 (left: 6 10 20)\n7. 6 * 10 = 60 (left: 60 20)\n60 * 20 = 1200 (left: 1200)\n', 4, '60 * 20 = 1200 (left: 1200)'), ('4 * 5 = 20 (left: 6 10 20)\n7. 6 * 10 = 60 (left: 60 20)\n20 / 60 = 0.33 (left: 0.33)\n', 4, '20 / 60 = 0.33 (left: 0.33)'), ('4 * 5 = 20 (left: 6 10 20)\n7. 6 * 10 = 60 (left: 60 20)\n20 * 3 + 60 = 100 (left: 100)\n', 4, '20 * 3 + 60 = 100 (left: 100)'), ('4 * 5 = 20 (left: 6 10 20)\n7. 6 * 10 = 60 (left: 60 20)\n60 / 20 = 3 (left: 3)\n', 4, '60 / 20 = 3 (left: 3)')]
-- values -- [60.0, 0.003, 1.002, 20.003, 2.001, 21.001, 60.0, 20.003, 1.002, 60.0, 60.0, 60.0, 0.003, 0.004, 1.002, 0, 0.003, 60.0, 40.001, 0.003, 0.003, 20.002, 0, 0, 0, 20.002, 0.004, 0.004, 0.004, 0.003, 0.003, 1.002, 0.003, 1.002, 0.003, 1.002, 20.002, 0.003, 2.001, 0.003, 1.002]
-- sorted_new_ys --: (('4 * 5 = 20 (left: 6 10 20)\n3. 20 - 6 = 14 (left: 14 10)\n1. 14 + 10 = 24 (left: 24)\n', 0, '1. 14 + 10 = 24 (left: 24)'), ('4 * 5 = 20 (left: 6 10 20)\n3. 20 - 6 = 14 (left: 14 10)\n7. 10 + 14 = 24 (left: 24)\n', 0, '7. 10 + 14 = 24 (left: 24)'), ('4 * 5 = 20 (left: 6 10 20)\n4. 10 - 6 = 4 (left: 4 20)\n4 + 20 = 24 (left: 24)\n', 1, '4 + 20 = 24 (left: 24)'), ('4 * 5 = 20 (left: 6 10 20)\n4. 10 - 6 = 4 (left: 4 20)\n20 + 4 = 24 (left: 24)\n', 1, '20 + 4 = 24 (left: 24)'), ('4 * 5 = 20 (left: 6 10 20)\n4. 10 - 6 = 4 (left: 4 20)\n20 - 4 = 16 (left: 16)\n', 1, '20 - 4 = 16 (left: 16)'), ('4 * 5 = 20 (left: 6 10 20)\n8. 20 - 10 = 10 (left: 6 10)\n6 + 10 = 16 (left: 16)\n', 2, '6 + 10 = 16 (left: 16)'), ('4 * 5 = 20 (left: 6 10 20)\n8. 20 - 10 = 10 (left: 6 10)\n6 * 10 = 60 (left: 60)\n', 2, '6 * 10 = 60 (left: 60)'), ('4 * 5 = 20 (left: 6 10 20)\n3. 20 - 6 = 14 (left: 14 10)\n6. 14 / 10 = 1.4 (left: 1.4 10)\n', 0, '6. 14 / 10 = 1.4 (left: 1.4 10)'), ('4 * 5 = 20 (left: 6 10 20)\n3. 20 - 6 = 14 (left: 14 10)\n4. 14 * 10 = 140 (left: 140)\n', 0, '4. 14 * 10 = 140 (left: 140)'), ('4 * 5 = 20 (left: 6 10 20)\n3. 20 - 6 = 14 (left: 14 10)\n8. 14 * 10 = 140 (left: 140)\n', 0, '8. 14 * 10 = 140 (left: 140)'), ('4 * 5 = 20 (left: 6 10 20)\n8. 20 - 10 = 10 (left: 6 10)\n6 / 10 = 0.6 (left: 0.6)\n', 2, '6 / 10 = 0.6 (left: 0.6)'), ('4 + 5 = 9 (left: 6 9 10)\n6 * 9 = 54 (left: 54 10)\n54 - 10 = 44 (left: 44)\n', 3, '54 - 10 = 44 (left: 44)'), ('4 * 5 = 20 (left: 6 10 20)\n7. 6 * 10 = 60 (left: 60 20)\n20 - 60 = -40 (left: -40)\n', 4, '20 - 60 = -40 (left: -40)'), ('4 * 5 = 20 (left: 6 10 20)\n3. 20 - 6 = 14 (left: 14 10)\n5. 10 / 14 = 0.71 (left: 0.71 14)\n', 0, '5. 10 / 14 = 0.71 (left: 0.71 14)'), ('4 * 5 = 20 (left: 6 10 20)\n7. 6 * 10 = 60 (left: 60 20)\n20 / 60 = 0.33 (left: 0.33)\n', 4, '20 / 60 = 0.33 (left: 0.33)'), ('4 * 5 = 20 (left: 6 10 20)\n3. 20 - 6 = 14 (left: 14 10)\n3. 10 - 14 = -4 (left: -4 14)\n', 0, '3. 10 - 14 = -4 (left: -4 14)'), ('4 * 5 = 20 (left: 6 10 20)\n4. 10 - 6 = 4 (left: 4 20)\n4 * 20 = 80 (left: 80)\n', 1, '4 * 20 = 80 (left: 80)'), ('4 * 5 = 20 (left: 6 10 20)\n4. 10 - 6 = 4 (left: 4 20)\n20 * 4 = 80 (left: 80)\n', 1, '20 * 4 = 80 (left: 80)'), ('4 + 5 = 9 (left: 6 9 10)\n6 * 9 = 54 (left: 54 10)\n10 - 54 = -44 (left: -44)\n', 3, '10 - 54 = -44 (left: -44)'), ('4 * 5 = 20 (left: 6 10 20)\n7. 6 * 10 = 60 (left: 60 20)\n60 + 20 = 80 (left: 80)\n', 4, '60 + 20 = 80 (left: 80)'), ('4 * 5 = 20 (left: 6 10 20)\n7. 6 * 10 = 60 (left: 60 20)\n20 + 60 = 80 (left: 80)\n', 4, '20 + 60 = 80 (left: 80)'), ('4 * 5 = 20 (left: 6 10 20)\n7. 6 * 10 = 60 (left: 60 20)\n60 / 20 = 3 (left: 3)\n', 4, '60 / 20 = 3 (left: 3)'), ('4 * 5 = 20 (left: 6 10 20)\n4. 10 - 6 = 4 (left: 4 20)\n4 / 20 = 0.2 (left: 0.2)\n', 1, '4 / 20 = 0.2 (left: 0.2)'), ('4 + 5 = 9 (left: 6 9 10)\n6 * 9 = 54 (left: 54 10)\n10 + 54 = 64 (left: 64)\n', 3, '10 + 54 = 64 (left: 64)'), ('4 + 5 = 9 (left: 6 9 10)\n6 * 9 = 54 (left: 54 10)\n54 / 10 = 5.4 (left: 5.4)\n', 3, '54 / 10 = 5.4 (left: 5.4)'), ('4 + 5 = 9 (left: 6 9 10)\n6 * 9 = 54 (left: 54 10)\n54 + 10 = 64 (left: 64)\n', 3, '54 + 10 = 64 (left: 64)'), ('4 * 5 = 20 (left: 6 10 20)\n3. 20 - 6 = 14 (left: 14 10)\n2. 14 - 10 = 4 (left: 4 10)\n', 0, '2. 14 - 10 = 4 (left: 4 10)'), ('4 * 5 = 20 (left: 6 10 20)\n4. 10 - 6 = 4 (left: 4 20)\n20 / 4 = 5 (left: 5)\n', 1, '20 / 4 = 5 (left: 5)'), ('4 * 5 = 20 (left: 6 10 20)\n8. 20 - 10 = 10 (left: 6 10)\nInput: 6 10\n', 2, 'Input: 6 10'), ('4 * 5 = 20 (left: 6 10 20)\n8. 20 - 10 = 10 (left: 6 10)\n10 / 6 = 1.67 (left: 1.67)\n', 2, '10 / 6 = 1.67 (left: 1.67)'), ('4 * 5 = 20 (left: 6 10 20)\n8. 20 - 10 = 10 (left: 6 10)\n10 - 6 = 4 (left: 4)\n', 2, '10 - 6 = 4 (left: 4)'), ('4 + 5 = 9 (left: 6 9 10)\n6 * 9 = 54 (left: 54 10)\n10 * 54 = 540 (left: 540)\n', 3, '10 * 54 = 540 (left: 540)'), ('4 + 5 = 9 (left: 6 9 10)\n6 * 9 = 54 (left: 54 10)\n54 * 10 = 540 (left: 540)\n', 3, '54 * 10 = 540 (left: 540)'), ('4 + 5 = 9 (left: 6 9 10)\n6 * 9 = 54 (left: 54 10)\n54 / 5.4 = 10 (left: 10)\n', 3, '54 / 5.4 = 10 (left: 10)'), ('4 * 5 = 20 (left: 6 10 20)\n7. 6 * 10 = 60 (left: 60 20)\n60 - 20 = 40 (left: 40)\n', 4, '60 - 20 = 40 (left: 40)'), ('4 * 5 = 20 (left: 6 10 20)\n7. 6 * 10 = 60 (left: 60 20)\n60 * 20 = 1200 (left: 1200)\n', 4, '60 * 20 = 1200 (left: 1200)'), ('4 * 5 = 20 (left: 6 10 20)\n7. 6 * 10 = 60 (left: 60 20)\n20 * 3 + 60 = 100 (left: 100)\n', 4, '20 * 3 + 60 = 100 (left: 100)'), ('4 * 5 = 20 (left: 6 10 20)\n4. 10 - 6 = 4 (left: 4 20)\n20 - 4 = 16 (left: 16)\n', 1, '20 - 4 = 16 (left: 16)'), ('4 * 5 = 20 (left: 6 10 20)\n8. 20 - 10 = 10 (left: 6 10)\n10 - 6 = 4 (left: 4)\n', 2, '10 - 6 = 4 (left: 4)'), ('4 * 5 = 20 (left: 6 10 20)\n8. 20 - 10 = 10 (left: 6 10)\n6 * 10 = 60 (left: 60)\n', 2, '6 * 10 = 60 (left: 60)'), ('4 * 5 = 20 (left: 6 10 20)\n8. 20 - 10 = 10 (left: 6 10)\n6 + 10 = 16 (left: 16)\n', 2, '6 + 10 = 16 (left: 16)'))
-- sol values --: (60.0, 60.0, 60.0, 60.0, 60.0, 60.0, 40.001, 21.001, 20.003, 20.003, 20.002, 20.002, 20.002, 2.001, 2.001, 1.002, 1.002, 1.002, 1.002, 1.002, 1.002, 1.002, 0.004, 0.004, 0.004, 0.004, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0, 0, 0, 0)
-- choices --: [('4 * 5 = 20 (left: 6 10 20)\n3. 20 - 6 = 14 (left: 14 10)\n1. 14 + 10 = 24 (left: 24)\n', 0, '1. 14 + 10 = 24 (left: 24)'), ('4 * 5 = 20 (left: 6 10 20)\n3. 20 - 6 = 14 (left: 14 10)\n7. 10 + 14 = 24 (left: 24)\n', 0, '7. 10 + 14 = 24 (left: 24)'), ('4 * 5 = 20 (left: 6 10 20)\n4. 10 - 6 = 4 (left: 4 20)\n4 + 20 = 24 (left: 24)\n', 1, '4 + 20 = 24 (left: 24)'), ('4 * 5 = 20 (left: 6 10 20)\n4. 10 - 6 = 4 (left: 4 20)\n20 + 4 = 24 (left: 24)\n', 1, '20 + 4 = 24 (left: 24)'), ('4 * 5 = 20 (left: 6 10 20)\n4. 10 - 6 = 4 (left: 4 20)\n20 - 4 = 16 (left: 16)\n', 1, '20 - 4 = 16 (left: 16)')]

Found the answer! 

Find final answer!

